//주석

/* 설명역할, 코드로 인식되지 않음 */

int main()
{
	/*
	자료형 종류(크기단위 : byte) Data Type
	정수형 : char(1), short(2), int(4), long(4), long long(8)
	실수형 : float(4), double(8)

	1Byte  = 2^3  Bit
	1KByte = 2^10 Byte
	1MByte = 2^10 KByte
	1GByte = 2^10 MByte
	1TByte = 2^10 GByte

	*/

	// int : 정수형 자료형중에 하나임
	// i는 : 변수명
	int i = 0;
	unsigned char c = 0;   // unsigned는 양수만 표현

	// 0에서 255까지 표현 가능함
	c = 0;
	c = 255;
	c = 256;
	c == 0; // 비교연산자이며 비교를 위해 쓰고 같다는 의미가 아님

	// 양수를 다 표현하기 때문에 char값을 쓸 경우 256까지가 아니라 -128~127까지 표현가능
	signed char c1 = 0; // signed 양수를 표현하는 의미지만 기본적으로 생략되어 들어가있음
	c1 = -1;
	c1 = -2;

	// 음의 정수 찾기(2의 보수법)
	// 대응되는 양수의 부호를 반전 후, 1을 더한다
	int a1 = 4 + 4.0;

	// 정수표현 방식과 실수표현 방식은 다르다
	// 실수표현 방식은 정밀도에 의존한다 (근사값을 찾아감)
	// 따라서 double(8) 자료형이 float(4) 자료형보다 더 큰 메모리를 쓰기 때문에 더 아래의 소수점까지 정확하고 세밀하게 표현 가능하다

	// 정수는 정수끼리, 실수는 실수끼리 연산하되, 두 표현방식의 피 연산자가 연산될 경우 명시적으로 변환하자
	float a = 10.52315f + 20; // 이런식으로 표현하지 말고
	float b = 10.52315f + (float)20; // 이런식으로 바꿔주자





	return 0;
}